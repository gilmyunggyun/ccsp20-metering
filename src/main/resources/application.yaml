server:
  port: 8080
#  cloud:
#    config:
#      name: ccsp20-common,ccsp20-metering
#  config:
#    import: optional:configserver:http://localhost:8888
#  jpa:
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#    hibernate:
#      database-platform:
management:
  elastic:
    a
  endpoints:
    web:
      exposure:
        include: "*"

---
spring:
  zipkin:
    base-url: http://10.11.53.1:9411
    httptag: true
  kafka:
    bootstrap-servers: 10.7.159.122:9092, 10.7.159.123:9092, 10.7.159.124:9092, 10.7.159.125:9092, 10.7.159.126:9092
    max-poll-interval-ms: 600000
    consumer:
      auto-offset-reset: earliest
      enable:
        auto:
          commit: true
  redis:

  mtgateway:
    server:
      url: http://10.11.52.58:9001
      name: mtgateway
    type1server:
      url: http://10.11.52.58:9003
      name: mtgatewaytype1
  lifecycle:
    timeout-per-shutdown-phase: 2m

management:
  health:
    probes:
      enabled: true
server:
  shutdown: graceful

---
spring:
  security:
    user:
      name: admin
      password: admin
  application:
    name: ccsp20-metering-graalvm

  cloud:
    config:
      enabled: false

    compatibility-verifier:
      enabled: false

  jpa:
    show-sql: true
    generate-ddl: false

#    Unable to resolve name [org.hibernate.dialect.PostgreSQL95Dialect]
    hibernate:
      ddl-auto: none

      dialect: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql

    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    #url: jdbc:postgresql://localhost:5432/
    url: jdbc:postgresql://10.11.53.64:5432/meteringdb
    username: meteringwas
    password: devOps1!
    hikari:
      maximum-pool-size: 300
      minimum-idle: 80
      schema: meteringadm
  kafka:
    bootstrap-servers: 10.7.159.122:9092, 10.7.159.123:9092, 10.7.159.124:9092, 10.7.159.125:9092, 10.7.159.126:9092
    max-poll-interval-ms: 600000
    consumer:
      auto-offset-reset: earliest
      enable:
        auto:
          commit: true

  ##Async Thread
  task:
    execution:
      thread-name-prefix: meteringAsync-
      pool:
        core-size: 8
        max-size: 16
        queue-capacity: 100

logging:
  level:
    com.hyundaiautoever.ccs.metering: DEBUG
transaction:
  logger:
    exclude:
      url: cloudfoundryapplication, swagger, actuator

metering:
  max-ten-minute-access-count: 200
  max-day-access-count: 300
  BLOCK_BY_API: BK02      # 서비스 요청 횟수 초과로 인한 차단(API미터링 관련 코드)
  SERVICE_SUCCESS: "0000"   #서비스요청성공
  MSG_FORMAT_INVALID: S999 #전문 형식 에러
  BLOCKED_RSON_10MIN: 1004 #CCSP PI미터링 차단(1004:10분, 1005:당일)
  BLOCKED_RSON_DAY: 1005   #CCSP API미터링 차단(1004:10분, 1005:당일)
  caridnullablewhitelist:
    /pushhistorylist.do
    , /getbadgecount.do
    , /readmsg.do
    , /delselectedpush.do
    , /popuppushhistory.do
    , /infolist_v2.do
    , /devicemapping.do
  ALLOW_ACCESS: 0
  ALLOW_BLOCK: 1
  DATA_NOT_VALID: 2

RETURN_CODE_TYPE:
  FAIL: F
  SUCCESS: S
  BLOCKED: B

server:
  tomcat:
    threads:
      max: 1000
      min-spare: 100
core:
  filter:
    exclude:
      - /actuator/**
      - /swagger/**

