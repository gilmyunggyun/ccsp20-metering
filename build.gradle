//buildscript {
//  dependencies {
//    classpath('com.google.cloud.tools:jib-native-image-extension-gradle:0.1.0')
//  }
//}

plugins {
  id 'org.springframework.boot' version '2.5.14'

  id 'io.spring.dependency-management' version '1.1.0'
//  id "com.google.cloud.tools.jib" version "3.3.1"
  id 'org.graalvm.buildtools.native' version '0.9.20'
  id 'java'

  id 'org.springframework.experimental.aot' version '0.11.5'

//  id("com.ccs-sre-team") version "1.0.12"
}

group = "com.hkmc.ccs"
version = "1.0.35"




repositories {
//
  gradlePluginPortal()
//
//  maven { url = uri("https://package-int.hcloud.hmc.co.kr/repository/maven-public") }
  maven { url = uri("https://repo.spring.io/release") }

//

  mavenLocal()
  mavenCentral()
}
dependencies {

//  testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'


  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  implementation ("org.springframework.boot:spring-boot-starter-test"){
    exclude group: 'org.springframework.boot', module: 'org.junit.vintage'

  }
//
//
  implementation "org.springframework.boot:spring-boot-starter-webflux"
//
//  // security
  implementation "org.springframework.boot:spring-boot-starter-security"
  implementation 'org.springframework.cloud:spring-cloud-starter-sleuth:3.0.5'
  implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin:3.0.5'
  implementation 'org.springframework.cloud:spring-cloud-starter-config:3.0.6'
//
//  // openfeign = true
//
  implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.6'
//
//
//  // kafka = true
  implementation 'org.springframework.kafka:spring-kafka'
  implementation  'org.springframework.kafka:spring-kafka-test'
  implementation ('io.github.embeddedkafka:embedded-kafka_2.13:2.7.0'){
//                   exclude group: 'org.apache.kafka', module: 'org.junit.vintage'
  }
//
//
//  implementation 'io.springfox:springfox-boot-starter:3.0.0'
//
//
//  //ccs-core
//
//  //jpa
//
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  implementation files('libs/commons-jpa-1.0.2.jar')
//  implementation 'com.hkmc.ccs.commons:commons-jpa:1.0.2'
//
//
//
//  //postgresql
//
////  api 'com.hkmc.ccs.commons:commons-r2dbc:1.0.2'
//
  implementation 'org.postgresql:postgresql:42.3.8'
//
  implementation  'com.opentable.components:otj-pg-embedded:1.0.1'
//
//
  implementation 'org.apache.commons:commons-lang3:3.12.0'

  implementation 'commons-io:commons-io:2.11.0'
//
//
//
//
  implementation 'org.apache.commons:commons-collections4:4.4'
  implementation 'com.google.code.gson:gson:2.10.1'
  implementation 'com.fasterxml.jackson.module:jackson-module-afterburner:2.14.2'
//
  // https://mvnrepository.com/artifact/io.micrometer/micrometer-core
//  implementation 'io.micrometer:micrometer-core:1.10.6'
//  implementation 'io.micrometer:micrometer-registry-statsd:1.10.6'
  implementation 'co.elastic.apm:elastic-apm-agent:1.34.1'
  testImplementation 'com.github.tomakehurst:wiremock:2.27.2'

//  implementation 'org.springframework.experimental:spring-native:0.12.0'
//  implementation 'org.springframework.experimental:spring-aot-gradle-plugin:0.9.1'
//
//  implementation 'org.projectlombok:lombok:1.18.12'
  annotationProcessor 'org.projectlombok:lombok:1.18.20'
  compileOnly 'org.projectlombok:lombok:1.18.20'

  implementation "org.springframework.boot:spring-boot-devtools"

  implementation 'co.elastic.apm:apm-agent-attach:1.34.1'

  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

//  implementation 'org.springframework:spring-context-indexer:6.0.7'

}


//
//cloudnative {
//  microservice {
//    openfeign = true
//  }
//
//  persistent {
//    jpa = true
//    postgresql = true
//  }
//
//  thirdparty {
//    commonsLang = true
//    commonsCollections = true
//    prometheusRSocket = true
//    jasypt = true
//  }
//
//  cicd {
//    container {
//      enabled = true
//      to = "registry.hcloud.hmc.co.kr/ccs/${project.name}"
//      //jvmOption = "-XX:+UnlockExperimentalVMOptions -XX:+UseZGC -XX:InitialRAMPercentage=50 -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=75"
//    }
//
//    helm {
//      name = "metering"
//      namespace = "metering"
//      serviceType = "ClusterIP"
//      servicePort = 8080
//
//      requestsMem = "3Gi"   // k8s request resource memory 설정
//      requestsCpu = "500m"  // k8s request resource cpu 설정 0.5 Core
//
//      limitsMem = "3Gi"  // requestMem 와 같게 설정
//      limitsCpu = "500m" // 1 Core (멀티 프로세스 활용한 코딩을 진행하지 않았다면 1Core 사용)
//
//    }
//
//    deploy {
//      oldStyleNaming = true    // 기존 argocd 파이프라인 네이밍 방식 , false 하게 되면 downtime 발생되어 무조건 true!!
//      strategy = "BLUE-GREEN" // or ROLLING-UPDATE
//
//      targets = [
//              [region: "ap-northeast", target: "dev", min: 1, max: 1],
////      [region: "ap-northeast", target: "stg", min: 1, max: 1],
////      [region: "ap-northeast", target: "prd", min: 16, max: 16]
//      ]
//
//    }
//  }
//}
//
//dependencies {
//  testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'
//  implementation 'org.springframework.boot:spring-boot-starter-validation'
//  implementation 'io.micrometer:micrometer-registry-statsd:1.9.2'
//  implementation group: 'co.elastic.apm', name: 'elastic-apm-agent', version: '1.34.1'
//}
//




//tasks.named("bootBuildImage") {
//  imageName = "localhost:5000/ccssreteam20220616/graalvm"
//  builder = "registry-dev.hcloud.hmc.co.kr/ccssreteam20220616/paketobuildpacks/builder@sha256:24d4eecdb0d86973dfc7c1bdf26f6797960a26bd170a26e98c289627e37f5c15"
//  docker {
////    host = "tcp://docker.hub:2376"
//    publish = true
//    publishRegistry {
//      username = "e679127"
//      password = "Iq1qGGLf9YLymht4npEgKDeYo3x2qGTc"
//      url = "registry-dev.hcloud.hmc.co.kr/ccssreteam20220616"
//    }
//    builderRegistry {
//      username = "e679127"
//      password = "Iq1qGGLf9YLymht4npEgKDeYo3x2qGTc"
//      url = "registry-dev.hcloud.hmc.co.kr/ccssreteam20220616"
//
//    }
//  }
//}

//buildscript {
//  dependencies {
//    classpath('com.google.cloud.tools:jib-native-image-extension-gradle:0.1.0')
//  }
//}



//jib {
//
//  from {
//
//    image = "registry.hcloud.hmc.co.kr/ccs/graalvm-ce:ol9-java17-22.3.0"
//
//  }
//
//  to {
//
//    allowInsecureRegistries = true
//
//    image = "localhost:5000/${project.name}"
//    auth {
//      username = "admin"
//      password = "admin"
//    }
//
//    tags = ["${project.version}"]
//  }
//
//  container {
//  }
//
////  pluginExtensions {
////    pluginExtension {
////      implementation = 'com.google.cloud.tools.jib.gradle.extension.nativeimage.JibNativeImageExtension'
////      properties = [
////              imageName: 'localhost:5000/ccsp20-metering'
////      ]
////
////
////    }
////  }
//
//}

bootBuildImage {
  imageName = "kilmmk/ccsp20-metering-graalvm:1.2.0"
//  tags = ['kilmmk/ccsp20-metering-graalvm:1.1.6']

//  args = ""

  environment = [
//          "BP_LOG_LEVEL": "INFO",
          'BP_JVM_VERSION': '17.0.7',
          'BP_NATIVE_IMAGE': 'true',
          'BP_NATIVE_IMAGE_BUILD_ARGUMENTS':
                  '-Djavax.net.ssl.trustStor --initialize-at-build-time=' +
                          'org.slf4j.impl.StaticLoggerBinder' +
                          ',org.slf4j.LoggerFactory' +
                          ',ch.qos.logback.classic.Logger' +
                          ',ch.qos.logback.core.spi.AppenderAttachableImpl' +
                          ',ch.qos.logback.core.status.StatusBase' +
                          ',ch.qos.logback.classic.Level' +
                          ',ch.qos.logback.core.status.InfoStatus' +
                          ',ch.qos.logback.classic.PatternLayout' +
                          ',ch.qos.logback.core.CoreConstants'+
                          ',org.apache.commons.logging.impl.SLF4JLocationAwareLog '+
                          '--trace-object-instantiation=org.apache.commons.logging.impl.SLF4JLocationAwareLog, ',
          'BPE_DELIM_JAVA_TOOL_OPTIONS': ' ',
          'BPE_APPEND_JAVA_TOOL_OPTIONS': '-Dspring.aot.enabled=true -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m -Dspring.profiles.active=local -javaagent:BOOT-INF/lib/elastic-apm-agent-1.34.1.jar -Delastic.apm.use_path_as_transaction_name=true -Delastic.apm.capture_body_content_types=* -Delastic.apm.capture_body=all -Delastic.apm.capture_headers=true -Delastic.apm.enable_experimental_instrumentations=true -Delastic.apm.service_name=ccsp20-metering-graalvm -Delastic.apm.server_urls=http://localhost:7200 -Delastic.apm.application_packages=com.hkmc' ,
//
////          'ELASTIC_APM_SERVER_URLS':'http://ccs-es-apm-apm-server.observability:8200',
          'JAVA_TOOL_OPTIONS' : '-Dspring.profiles.active=local -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m'
          //'JAVA_TOOL_OPTIONS' : '-Dspring.aot.enabled=true -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m -Dspring.profiles.active=local -javaagent:BOOT-INF/lib/elastic-apm-agent-1.34.1.jar -Delastic.apm.use_path_as_transaction_name=true -Delastic.apm.capture_body_content_types=* -Delastic.apm.capture_body=all -Delastic.apm.capture_headers=true -Delastic.apm.enable_experimental_instrumentations=true -Delastic.apm.service_name=ccsp20-metering-graalvm -Delastic.apm.server_urls=http://localhost:7200 -Delastic.apm.application_packages=com.hkmc'

  ]
 buildpacks = ["gcr.io/paketo-buildpacks/java-native-image", "urn:cnb:builder:paketo-buildpacks/java"]
//  buildpacks = ["gcr.io/paketo-buildpacks/environment-variables"]

  builder = "paketobuildpacks/builder:full"
//  buildpacks = ["file://c:/buildpack.tar.gz", "urn:cnb:builder:paketo-buildpacks/java"]
}

//bootBuildImage {
//  imageName = "localhost:5000/ccsp20-metering-graalvm:1.1.8"
////  tags = ['kilmmk/ccsp20-metering-graalvm:1.1.6']
//
////  args = ""
////  bindings = ["${project.projectDir}/ca-certficates/binding:/platform/bindings/ca-certificates"]
//  environment = [
////          "BP_LOG_LEVEL": "debug",
//'BP_NATIVE_IMAGE': 'true',
////          'BP_NATIVE_IMAGE_BUILD_ARGUMENTS':
////                  '--initialize-at-build-time=' +
////                  'org.slf4j.impl.StaticLoggerBinder' +
////                  ',org.slf4j.LoggerFactory' +
////                  ',ch.qos.logback.classic.Logger' +
////                  ',ch.qos.logback.core.spi.AppenderAttachableImpl' +
////                  ',ch.qos.logback.core.status.StatusBase' +
////                  ',ch.qos.logback.classic.Level' +
////                  ',ch.qos.logback.core.status.InfoStatus' +
////                  ',ch.qos.logback.classic.PatternLayout' +
////                  ',ch.qos.logback.core.CoreConstants'+
////                  ',org.apache.commons.logging.impl.SLF4JLocationAwareLog '+
////          '--trace-object-instantiation=org.apache.commons.logging.impl.SLF4JLocationAwareLog -Dspring.profiles.active=dev ',
////          'BPE_DELIM_JAVA_TOOL_OPTIONS': ' ',
////          'BPE_APPEND_JAVA_TOOL_OPTIONS': '-javaagent=/workspace/BOOT-INF/lib/elastic-apm-agent-1.34.1.jar -Dspring.profiles.active=dev -XX:+UnlockExperimentalVMOptions',
//
////          'ELASTIC_APM_SERVER_URLS':'http://ccs-es-apm-apm-server.observability:8200',
////          'JAVA_TOOL_OPTIONS' : '-javaagent=/workspace/BOOT-INF/lib/elastic-apm-agent-1.34.1.jar'
//
//  ]
//  buildpacks = ["gcr.io/paketo-buildpacks/graalvm", "urn:cnb:builder:paketo-buildpacks/java"]
//
//
//  builder = "paketobuildpacks/builder:tiny"
////  buildpacks = ["file://c:/buildpack.tar.gz", "urn:cnb:builder:paketo-buildpacks/java"]
//}


//test {
//  exclude '**/*'
//}

//graalvmNative {
//  binaries {
//    main {
//
//      imageName = "ccsp20-metering"
//      buildArgs = [
//              "--trace-object-instantiation=org.apache.commons.logging.impl.SLF4JLocationAwareLog"
//              ,"-H:-CheckToolchain"
//              ,"--initialize-at-build-time=org.slf4j.impl.StaticLoggerBinder,org.apache.commons.logging.impl.SLF4JLocationAwareLog,ch.qos.logback.core.CoreConstants,ch.qos.logback.classic.PatternLayout,ch.qos.logback.core.status.InfoStatus,ch.qos.logback.classic.Level,org.slf4j.LoggerFactory,ch.qos.logback.classic.Logger,ch.qos.logback.core.spi.AppenderAttachableImpl,ch.qos.logback.core.spi.AppenderAttachableImpl,ch.qos.logback.core.status.StatusBase"
//              ]
//
//      jvmArgs.add("-Delastic.apm.application_packages=com.hkmc -Delastic.apm.server_urls=http://host.docker.internal:8200 -Delastic.apm.service_name=ccsp20-metering-graalvm -javaagent:libs/elastic-apm-agent-1.34.1.jar -Delastic.apm.enable_experimental_instrumentations=true -Delastic.apm.capture_headers=true -Delastic.apm.capture_body=all -Delastic.apm.use_path_as_transaction_name=true -Delastic.apm.capture_body_content_types=* -Dspring.profiles.active=dev")
////              " -XX:+UnlockExperimentalVMOptions"
////              ," -XX:+UseZGC"
////              ," -Xms256m"
////              ," -Xmx256m"
////              ," -XX:MaxDirectMemorySize=256m"
////              ," -javaagent:libs/elastic-apm-agent-1.34.1.jar"
////              ," -Dspring.profiles.active=dev"
////              ," -Delastic.apm.use_path_as_transaction_name=true"
////              ," -Delastic.apm.capture_body_content_types=*"
////              ," -Delastic.apm.capture_body=all"
////              ," -Delastic.apm.capture_headers=true"
////              ," -Delastic.apm.enable_experimental_instrumentations=true"
////              ," -Delastic.apm.service_name=ccsp20-metering-graalvm"
////              ," -Delastic.apm.server_urls=http://localhost:8200"
////              ," -Delastic.apm.application_packages=com.hkmc"
////
////      ]
//    }
//  }
//}



//
//
//}
